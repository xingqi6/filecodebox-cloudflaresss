name: Deploy FileCodeBox to Cloudflare Workers

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # ÂÖÅËÆ∏ÊâãÂä®Ëß¶Âèë

env:
  # ËµÑÊ∫êÂêçÁß∞Ôºà‰ΩøÁî®È°πÁõÆ‰∏≠ÁîüÊàêÁöÑÂêçÁß∞Ôºâ
  R2_BUCKET_NAME: "filecodebox-r2-f6bd1dfe"
  R2_PREVIEW_BUCKET_NAME: "filecodebox-r2-f6bd1dfe-preview"
  KV_NAMESPACE_NAME: "filecodebox-kv-2c88c777"

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest
    name: Setup Resources and Deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Wrangler
      run: npm install -g wrangler

    - name: Authenticate with Cloudflare
      run: |
        echo "Setting up Cloudflare authentication..."
        wrangler whoami
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Create R2 Buckets
      run: |
        echo "ü™£ Creating R2 buckets..."
        
        # ÂàõÂª∫‰∏ªÂ≠òÂÇ®Ê°∂
        echo "Creating main bucket: $R2_BUCKET_NAME"
        if wrangler r2 bucket create "$R2_BUCKET_NAME" 2>/dev/null; then
          echo "‚úÖ Main bucket created successfully"
        else
          echo "‚ÑπÔ∏è Main bucket might already exist, continuing..."
        fi
        
        # ÂàõÂª∫È¢ÑËßàÂ≠òÂÇ®Ê°∂
        echo "Creating preview bucket: $R2_PREVIEW_BUCKET_NAME"
        if wrangler r2 bucket create "$R2_PREVIEW_BUCKET_NAME" 2>/dev/null; then
          echo "‚úÖ Preview bucket created successfully"
        else
          echo "‚ÑπÔ∏è Preview bucket might already exist, continuing..."
        fi
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Create KV Namespaces
      id: create_kv
      run: |
        echo "üóÑÔ∏è Creating KV namespaces..."
        
        # ÂàõÂª∫‰∏ª KV ÂëΩÂêçÁ©∫Èó¥
        echo "Creating main KV namespace: $KV_NAMESPACE_NAME"
        KV_OUTPUT=$(wrangler kv:namespace create "$KV_NAMESPACE_NAME" 2>/dev/null || echo "exists")
        
        if [[ "$KV_OUTPUT" == "exists" ]]; then
          echo "‚ÑπÔ∏è Main KV namespace might already exist"
          # Â∞ùËØïËé∑ÂèñÁé∞ÊúâÁöÑ KV ÂëΩÂêçÁ©∫Èó¥ÂàóË°®
          KV_LIST=$(wrangler kv:namespace list)
          KV_ID=$(echo "$KV_LIST" | jq -r --arg name "$KV_NAMESPACE_NAME" '.[] | select(.title == $name) | .id' | head -1)
          if [[ -n "$KV_ID" && "$KV_ID" != "null" ]]; then
            echo "Found existing KV namespace ID: $KV_ID"
            echo "kv_id=$KV_ID" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Could not find existing KV namespace"
            exit 1
          fi
        else
          echo "$KV_OUTPUT"
          KV_ID=$(echo "$KV_OUTPUT" | grep -o 'id = "[^"]*"' | sed 's/id = "\(.*\)"/\1/')
          echo "‚úÖ Main KV namespace created with ID: $KV_ID"
          echo "kv_id=$KV_ID" >> $GITHUB_OUTPUT
        fi
        
        # ÂàõÂª∫È¢ÑËßà KV ÂëΩÂêçÁ©∫Èó¥
        echo "Creating preview KV namespace: $KV_NAMESPACE_NAME"
        KV_PREVIEW_OUTPUT=$(wrangler kv:namespace create "$KV_NAMESPACE_NAME" --preview 2>/dev/null || echo "exists")
        
        if [[ "$KV_PREVIEW_OUTPUT" == "exists" ]]; then
          echo "‚ÑπÔ∏è Preview KV namespace might already exist"
          # Â∞ùËØïËé∑ÂèñÁé∞ÊúâÁöÑÈ¢ÑËßà KV ÂëΩÂêçÁ©∫Èó¥
          KV_PREVIEW_ID=$(echo "$KV_LIST" | jq -r --arg name "${KV_NAMESPACE_NAME}_preview" '.[] | select(.title == $name) | .id' | head -1)
          if [[ -n "$KV_PREVIEW_ID" && "$KV_PREVIEW_ID" != "null" ]]; then
            echo "Found existing preview KV namespace ID: $KV_PREVIEW_ID"
            echo "kv_preview_id=$KV_PREVIEW_ID" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è Could not find existing preview KV namespace, will use main KV ID"
            echo "kv_preview_id=$KV_ID" >> $GITHUB_OUTPUT
          fi
        else
          echo "$KV_PREVIEW_OUTPUT"
          KV_PREVIEW_ID=$(echo "$KV_PREVIEW_OUTPUT" | grep -o 'preview_id = "[^"]*"' | sed 's/preview_id = "\(.*\)"/\1/')
          if [[ -z "$KV_PREVIEW_ID" ]]; then
            # Â¶ÇÊûúÊ≤°ÊúâÊâæÂà∞ preview_idÔºåÂ∞ùËØïÊèêÂèñ id
            KV_PREVIEW_ID=$(echo "$KV_PREVIEW_OUTPUT" | grep -o 'id = "[^"]*"' | sed 's/id = "\(.*\)"/\1/')
          fi
          echo "‚úÖ Preview KV namespace created with ID: $KV_PREVIEW_ID"
          echo "kv_preview_id=$KV_PREVIEW_ID" >> $GITHUB_OUTPUT
        fi
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Update wrangler.toml with KV IDs
      run: |
        echo "üìù Updating wrangler.toml with actual KV IDs..."
        
        KV_ID="${{ steps.create_kv.outputs.kv_id }}"
        KV_PREVIEW_ID="${{ steps.create_kv.outputs.kv_preview_id }}"
        
        echo "Using KV ID: $KV_ID"
        echo "Using KV Preview ID: $KV_PREVIEW_ID"
        
        # ÊõøÊç¢Âç†‰ΩçÁ¨¶
        sed -i "s/PLACEHOLDER_KV_ID/$KV_ID/g" wrangler.toml
        sed -i "s/PLACEHOLDER_KV_PREVIEW_ID/$KV_PREVIEW_ID/g" wrangler.toml
        
        echo "‚úÖ wrangler.toml updated successfully"
        
        # ÊòæÁ§∫Êõ¥Êñ∞ÂêéÁöÑÈÖçÁΩÆ
        echo "Updated KV configuration:"
        grep -A 3 "kv_namespaces" wrangler.toml

    - name: Set up Secrets
      run: |
        echo "üîê Setting up Cloudflare Workers secrets..."
        
        # ËÆæÁΩÆÊ∞∏‰πÖÂØÜÁ†ÅÔºàÂ¶ÇÊûúÊèê‰æõÔºâ
        if [[ -n "${{ secrets.PERMANENT_PASSWORD }}" ]]; then
          echo "Setting PERMANENT_PASSWORD secret..."
          echo "${{ secrets.PERMANENT_PASSWORD }}" | wrangler secret put PERMANENT_PASSWORD
          echo "‚úÖ PERMANENT_PASSWORD secret set"
        else
          echo "‚ÑπÔ∏è No PERMANENT_PASSWORD provided, using default"
        fi
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Deploy to Cloudflare Workers
      run: |
        echo "üöÄ Deploying to Cloudflare Workers..."
        wrangler deploy
        echo "‚úÖ Deployment completed successfully!"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Get deployment info
      run: |
        echo "üìã Deployment Information:"
        echo "- R2 Bucket: $R2_BUCKET_NAME"
        echo "- R2 Preview Bucket: $R2_PREVIEW_BUCKET_NAME"
        echo "- KV Namespace: $KV_NAMESPACE_NAME"
        echo "- KV ID: ${{ steps.create_kv.outputs.kv_id }}"
        echo "- KV Preview ID: ${{ steps.create_kv.outputs.kv_preview_id }}"
        
        echo ""
        echo "üåê Your FileCodeBox is now deployed!"
        echo "Visit your Cloudflare Workers dashboard to get the deployment URL."